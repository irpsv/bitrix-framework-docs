blocks:
  - type: 'header-block'
    width: 's'
    offset: 'default'
    title: 'Bitrix Framework'
    resetPaddings: false
    verticalOffset: 'l'
    description: 'Фреймворк для работы с «1С-Битрикс: Управление сайтом» и Битрикс24'
    theme: 'dark'
    background:
      light:
        image:
         mobile: '_images/img_framework_main_v2.png'
         desktop: '_images/img_framework_main_v2.png'
         disableCompress: true
        color: '#3E1CFF'
        fullWidth: false
      dark:
        image:
         mobile: '_images/img_framework_main_v2.png'
         desktop: '_images/img_framework_main_v2.png'
         disableCompress: true
        color: '#3E1CFF'
        fullWidth: false
    buttons:
      - text: 'Начать'
        theme: 'outlined-contrast'
        size: 'promo'
        url: 'pages/get-started/install-env.html'
      - text: 'GitHub'
        theme: 'outlined-contrast'
        size: 'promo'
        url: 'https://github.com/bitrix-tools/framework-docs'

  - type: 'card-layout-block'
    title: Продукты
    description: |
      Bitrix Framework — это PHP-фреймворк для бизнес-решений. На нем работают «1C-Битрикс: Управление сайтом» и Битрикс24 — вам не придется разрабатывать систему с нуля. Виртуальная машина BitrixVM ускоряет развертывание проектов.
    children:
      - text: 'CMS для интернет-магазинов и корпоративных сайтов. Обрабатывает заказы в многопоточном режиме, поддерживает API для интеграций и встроенное кеширование.'
        title: Управление сайтом
        type: 'image-card'
        image: {
           dark : "_images/img_framework_banner_s_01.png",
           light : "_images/img_framework_banner_s_01.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Платформа для автоматизации бизнеса и командной работы. Объединяет CRM, управление задачами, документы и видеозвонки в едином интерфейсе.'
        title: 'Битрикс24'
        type: 'image-card'
        media:
        image: {
           dark : "_images/img_framework_banner_s_02_v2.png",
           light : "_images/img_framework_banner_s_02_v2.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Готовая виртуальная машина позволяет быстро развернуть проекты на Bitrix Framework. Содержит настроенный сервер с проверенной конфигурацией.'
        title: 'BitrixVM'
        type: 'image-card'
        image: {
           dark : "_images/img_framework_banner_s_03.png",
           light : "_images/img_framework_banner_s_03.png"
        }
        links:
          - text: 'Установить окружение'
            url: 'pages/get-started/install-env.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E

  - type: 'card-layout-block'
    title: 'Преимущества'
    children:
      - type: 'basic-card'
        title: 'CMS из коробки'
        text: |
          Bitrix Framework включает CMS с полным набором функций:
            - управление структурой и содержимым
            - SEO-инструменты
            - система прав доступа
            - готовая база для e-commerce и корпоративных решений
        # icon: '_images/img_restapi_icon_01.svg'
        links:
          - text: 'О продукте на официальном сайте 1С-Битрикс'
            url: 'https://www.1c-bitrix.ru/products/cms/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
      - type: 'basic-card'
        title: Модульность
        text: |
          Система позволяет расширять функционал без изменения ядра. Доступны:
            - API для разработки кастомных решений
            - каталог готовых решений в Маркетплейсе
        # icon: '_images/img_restapi_icon_03.svg'
        links:
          - text: 'Маркетплейс'
            url: 'https://marketplace.1c-bitrix.ru/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
          - text: 'Маркет Битрикс24'
            url: 'https://www.bitrix24.ru/apps/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
      - type: 'basic-card'
        title: Интеграции
        text: |
          Bitrix Framework поддерживает
            - REST API для двустороннего обмена данными
            - вебхуки для событийной модели
            - стандартные коннекторы для 1С, email-сервисов и CRM
        # icon: '_images/img_restapi_icon_02.svg'
        links:
          - text: 'Документация REST API'
            url: 'https://apidocs.bitrix24.ru/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'

      - type: 'basic-card'
        title: 'Стандарты разработки'
        text: |
          Bitrix Framework поддерживает основные стандарты PHP для обеспечения совместимости:
          - базовые стандарты написания кода PSR-1
          - автозагрузка классов через PSR-4
          - работа с HTTP через PSR-7 интерфейсы
          - поддержка Composer для пакетного менеджмента
        # icon: '_images/img_restapi_icon_01.svg'

      - type: 'basic-card'
        title: Безопасность
        text: |
          Встроенные механизмы защиты:
          - фильтрация входных данных от XSS и SQL-инъекций
          - защита от CSRF-атак
          - регулярные обновления безопасности
        # icon: '_images/img_restapi_icon_02.svg'

      - type: 'basic-card'
        title: Масштабируемость
        text: |
          Поддержку высоких нагрузок обеспечивают:
          - многоуровневое кеширование данных
          - встроенные механизмы кластеризации
          - интеграция с облачными хранилищами
        # icon: '_images/img_restapi_icon_03.svg'

  - type: 'tabs-block'
    title: Инструменты разработки в Bitrix Framework
    description: Фреймворк включает готовые компоненты для разработки — от работы с базой до фоновых задач.
    items:
      - tabName: Контроллеры
        text: |
          Контроллеры с автоматической валидацией и DI-инъекцией.

          ```php
          namespace Demo\Module\Controller;

          use Bitrix\Main\Engine\Controller;
          use Bitrix\Main\Validation\Rule\NotEmpty;

          class Post extends Controller
          {
            public function getAction(
              #[NotEmpty]
              string $code,
              PostService $service,
            )
            {
              $entity = $service->getByCode($code);
              if (!$entity)
              {
                return $this->renderComponent('demo:error', params: [
                  'message' => Loc::getMessage('POST_NOT_FOUND'),
                ]);
              }

              return $this->renderView('posts/view', [
                'entity' => $entity,
              ]);
            }
          }
          ```

      - tabName: Роутинг
        text: |
          Система маршрутизации с именованными маршрутами и группами.

          ```php
          use Bitrix\Main\Routing\RoutingConfigurator;

          return function (RoutingConfigurator $routes)
          {
            $routes->any('/', [
              \Demo\Module\Controller\Page::class,
              'index',
            ]);

            $routes
              ->prefix('/post')
              ->group(function(RoutingConfigurator $routes) {
                $routes
                  ->any('{code}', [
                    \Demo\Module\Controller\Post::class,
                    'get',
                  ])
                  ->where('code', '\w+')
                  ->name('post-get')
                ;
              })
            ;
          };
          ```

          Генерация URL по имени маршрута:
          ```php
          $url = \Bitrix\Main\Application::getInstance()->getRouter()->route('post-view', [
            'code' => 'my-post',
          ]);
          ```

      - tabName: ActionFilters
        text: |
          Гибкая работа с запросами на уровне контроллеров. Фильтры для обработки запросов и ответов:

          ```php
          namespace Demo\Module\Controller;

          use Bitrix\Main\Engine\ActionFilter\Attribute\Rule\Authentication;
          use Bitrix\Main\Engine\ActionFilter\Attribute\Rule\Cors;
          use Bitrix\Main\Engine\ActionFilter\Attribute\Rule\HttpMethod;
          use Bitrix\Main\Engine\Controller;

          class Post extends Controller
          {
            #[Authentication]
            #[HttpMethod(['POST'])]
            public function updateAction(int $id, PostForm $form)
            {
              //...
            }

            #[Cors(
              allowOrigin: '*',
            )]
            public function getAction(string $code)
            {
              // ...
            }
          }
          ```
      - tabName: ORM
        text: |
          Генерация классов из базы данных:

          ```bash
          php bitrix.php make:tablet my_table_name demo.module
          ```

          Работа с сущностями:

          ```php
          use Bitrix\Main\UserTable;

          $user = UserTable::query()
            ->where('LOGIN', '=', 'user@example.com')
            ->where('ACTIVE', true)
            ->fetchObject()
          ;
          $user->setActive(true);
          $user->save();
          ```

          Работа с коллекциями:

          ```php
          use Bitrix\Main\Type\DateTime;
          use Bitrix\Main\UserTable;

          $users = UserTable::query()
            ->addSelect('ID')
            ->whereBetween(
              'DATE_REGISTER',
              DateTime::createFromText('last month'),
              DateTime::createFromText('now')
            )
            ->fetchCollection()
          ;
          $usersIds = $users->getIdList();
          ```

      - tabName: Рассылки и SMS
        text: |
          Удобный API для отправки СМС и почты.

          Отправка email-а по шаблону:
          ```php
          \Bitrix\Main\Mail\Event::send([
            'LID' => SITE_ID,
            'EVENT_NAME' => 'WELCOME_EMAIL',
            'FIELDS' => [
              'NAME' => $userName,
              'CONFIRM_LINK' => $confirmUrl
            ],
          ]);
          ```

          Отправка СМС по шаблону:
          ```php
          $event = new \Bitrix\Main\Sms\Event('WELCOME_SMS', [
            'NAME' => $userName,
            'CONFIRM_LINK' => $confirmUrl
          ]);
          $event->setSiteId(SITE_ID);
          $event->send();
          ```

      - tabName: Файлы и S3
        text: |
          Удобная и простая работа с файлами:

          ```php
          // сохранение
          $fileId = CFile::SaveFile(
            $_FILES['file'],
            'path-to-file',
          );

          // получение
          $fileInfo = CFile::GetByID($fileId);
          ```

          Для того чтобы файлы стали храниться в S3 - просто смени настройки в CMS и подключите хранилище.
          Вызовы API останутся без изменения!

      - tabName: Очереди
        text: |
          Обрабатывайте задачи в фоне через очередь.

          Отправить сообщение в очередь:
          ```php
          ```

          Обработчик сообщения из очереди:
          ```php
          ```

      - tabName: Агенты и фоновые задачи
        text: |
          Агенты и фоновые задачи помогают выполнять PHP-код автоматически.
          - Агенты — запускают код по расписанию.
          - Фоновые задачи — после отправки ответа пользователю.

          Для сложных сценариев можно комбинировать оба подхода.

          ```php
          // Фоновая задача запускает агента для поэтапной обработки
          $app->addBackgroundJob(function() {
              CAgent::AddAgent(
                  "MyLongProcess::start();",
                  "mymodule",
                  "N",
                  0
              );
          });
          ```

      - tabName: События
        text: |
          Реагируйте на системные изменения:

          ```php
          AddEventHandler("main", "OnAfterUserAdd", function($userId) {
              // Отправка welcome-email
          });
          ```

  - type: 'content-layout-block'
    textContent:
      title: 'Инструменты безопасности'

  - type: 'questions-block'
    text: |
      Контролируйте доступ к данным и функциям системы. Предотвращайте утечки и нарушения законов.
    items:
      - title: Работа с пользователями
        text: |
          - Регистрируйте сотрудников с подтверждением email или через корпоративный портал.
          - Настраивайте двухфакторную аутентификацию для доступа к критичным разделам.
          - Просматривайте историю входов и подозрительную активность.

          ```php
          // Включить 2FA для пользователя
          $user = new CUser;
          $user->Update($USER->GetID(), ["SECURE_AUTH" => "Y"]);
          ```
        listStyle: 'disk'

      - title: Группы пользователей и политики безопасности
        text: |
          - Создавайте отдельные группы для отделов (бухгалтерия, маркетинг, IT).
          - Ограничивайте доступ к финансовым данным и персональной информации.
          - Настраивайте политики паролей для разных групп.

          ```php
          // Создание группы с ограниченными правами
          $group = new CGroup;
          $group->Add([
              "NAME" => "Финансовый отдел",
              "SECURITY_POLICY" => ["PASSWORD_LENGTH" => 12]
          ]);
          ```
        listStyle: 'disk'

      - title: Ролевая модель
        text: |
          - Назначайте права по принципу минимальных привилегий (ABAC).
          - Контролируйте доступ к модулям через атрибуты: отдел, должность, локация.
          - Аудит всех изменений прав доступа.

          ```php
          // Проверка доступа через AccessController
          if (\Bitrix\Main\Engine\CurrentUser::get()->canDoOperation('edit_financial_data')) {
              // Доступ разрешен
          }
          ```
        listStyle: 'disk'

  - type: 'content-layout-block'
    background:
      dark:
        style:
          backgroundColor: '#E8E4FF'
      light:
        style:
          backgroundColor: '#E8E4FF'
    textContent:
      title: Быстрый старт с Docker образом
      text: |
        1. Склонируйте официальный репозиторий
            ```bash
            cd my-project
            git clone https://github.com/bitrix-tools/env-docker.git
            ```

        2. Настройте обязательные параметры. Укажите:
            - пароли баз данных MySQL и Postgres в `.env_sql`
            - секретный ключ для Push-сервера в `.env_push`

        3. Запустите контейнеры
            ```bash
            docker compose up -d
            ```

        4. Скачайте скрипт `bitrixsetup.php` в папку `www`
            ```bash
            docker compose exec --user=bitrix php sh
            cd /opt/www/
            wget https://www.1c-bitrix.ru/download/scripts/bitrixsetup.php
            ```

        5. Откройте в браузере [http://localhost:8588/bitrixsetup.php](http://localhost:8588/bitrixsetup.php)

        6. Следуйте инструкциям мастера

      links:
        - text: 'Контейнерное окружение для Битрикс (README)'
          url: 'https://github.com/bitrix-tools/env-docker'
          theme: 'normal'
          arrow: true
          color: '#54BA7E'

        - text: 'Инструкция по установке продуктов Битрикс'
          url: 'pages/get-started/install-solution.html'
          theme: 'normal'
          arrow: true
          color: '#54BA7E'


