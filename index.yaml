blocks:
  - type: 'header-block'
    width: 's'
    offset: 'default'
    title: 'Bitrix Framework'
    resetPaddings: false
    verticalOffset: 'l'
    description: 'Фреймворк для работы с «1С-Битрикс: Управление сайтом» и Битрикс24'
    theme: 'dark'
    background:
      light:
        image:
         mobile: '_images/img_framework_main_v2.png'
         desktop: '_images/img_framework_main_v2.png'
         disableCompress: true
        color: '#3E1CFF'
        fullWidth: false
      dark:
        image:
         mobile: '_images/img_framework_main_v2.png'
         desktop: '_images/img_framework_main_v2.png'
         disableCompress: true
        color: '#3E1CFF'
        fullWidth: false
    buttons:
      - text: 'Начать'
        theme: 'outlined-contrast'
        size: 'promo'
        url: 'pages/get-started/install-env.html'
      - text: 'GitHub'
        theme: 'outlined-contrast'
        size: 'promo'
        url: 'https://github.com/bitrix-tools/framework-docs'

  - type: 'card-layout-block'
    title: Продукты
    description: | 
      Bitrix Framework — это PHP-фреймворк для бизнес-решений. На нем работают «1C-Битрикс: Управление сайтом» и Битрикс24 — вам не придется разрабатывать систему с нуля. Виртуальная машина BitrixVM ускоряет развертывание проектов.
    children:
      - text: 'CMS для интернет-магазинов и корпоративных сайтов. Обрабатывает заказы в многопоточном режиме, поддерживает API для интеграций и встроенное кеширование.'
        title: Управление сайтом
        type: 'image-card'
        image: {
           dark : "_images/img_framework_banner_s_01.png",
           light : "_images/img_framework_banner_s_01.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Платформа для автоматизации бизнеса и командной работы. Объединяет CRM, управление задачами, документы и видеозвонки в едином интерфейсе.'
        title: 'Битрикс24'
        type: 'image-card'
        media:
        image: {
           dark : "_images/img_framework_banner_s_02_v2.png",
           light : "_images/img_framework_banner_s_02_v2.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Готовая виртуальная машина позволяет быстро развернуть проекты на Bitrix Framework. Содержит настроенный сервер с проверенной конфигурацией.'
        title: 'BitrixVM'
        type: 'image-card'
        image: {
           dark : "_images/img_framework_banner_s_03.png",
           light : "_images/img_framework_banner_s_03.png"
        }
        links:
          - text: 'Установить окружение'
            url: 'pages/get-started/install-env.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E

  - type: 'card-layout-block'
    title: 'Преимущества'
    children:
      - type: 'basic-card'
        title: 'CMS из коробки'
        text: |
          Bitrix Framework включает CMS с полным набором функций:
            - Управление структурой и содержимым
            - SEO-инструменты
            - Система прав доступа
            - Готовая база для e-commerce и корпоративных решений
        # icon: '_images/img_restapi_icon_01.svg'
        links:
          - text: 'О продукте на официальном сайте 1С-Битрикс'
            url: 'https://www.1c-bitrix.ru/products/cms/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
      - type: 'basic-card'
        title: Модульность
        text: |
          Система позволяет расширять функционал без изменения ядра. Доступны:
            - API для разработки кастомных решений
            - Каталог готовых решений в Маркетплейсе.
        # icon: '_images/img_restapi_icon_03.svg'
        links:
          - text: 'Маркетплейс'
            url: 'https://marketplace.1c-bitrix.ru/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
          - text: 'Маркет Битрикс24'
            url: 'https://www.bitrix24.ru/apps/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'
      - type: 'basic-card'
        title: Интеграции
        text: |
          Bitrix Framework поддерживает
            - REST API для двустороннего обмена данными
            - Вебхуки для событийной модели
            - Стандартные коннекторы для 1С, email-сервисов и CRM
        # icon: '_images/img_restapi_icon_02.svg'
        links:
          - text: 'Документация REST API'
            url: 'https://apidocs.bitrix24.ru/'
            theme: 'normal'
            arrow: true
            color: '#54BA7E'

      - type: 'basic-card'
        title: 'Стандарты разработки'
        text: |
          Bitrix Framework поддерживает основные стандарты PHP для обеспечения совместимости
          - Базовые стандарты написания кода PSR-1
          - Автозагрузка классов через PSR-4
          - Работа с HTTP через PSR-7 интерфейсы
          - Поддержка Composer для пакетного менеджмента
        # icon: '_images/img_restapi_icon_01.svg'

      - type: 'basic-card'
        title: Безопасность
        text: |
          Встроенные механизмы защиты:
          - Фильтрация входных данных от XSS и SQL-инъекций
          - Защита от CSRF-атак
          - Регулярные обновления безопасности
        # icon: '_images/img_restapi_icon_02.svg'

      - type: 'basic-card'
        title: Масштабируемость
        text: |
          Поддержку высоких нагрузок обеспечивают:
          - Многоуровневое кеширование данных
          - Встроенные механизмы кластеризации
          - Интеграция с облачными хранилищами
        # icon: '_images/img_restapi_icon_03.svg'

  - type: 'tabs-block'
    title: Инструменты разработки в Bitrix Framework
    description: Фреймворк включает готовые компоненты для разработки — от работы с базой до фоновых задач.
    items:
      - tabName: Контроллеры
        text: |
          Контроллеры с автоматической валидацией и DI-инъекцией.

          ```php

          namespace Bitrix\Demo\Controllers;

          use Bitrix\Main\Engine\Controller;
          use Bitrix\Main\Engine\ActionFilter;
          use Bitrix\Main\Engine\Response\AjaxJson;
          use Bitrix\Demo\Services\PageService;

          class MainController extends Controller
          {
              public function __construct(private PageService $pageService)
              {
                  parent::__construct();
              }

              protected function getDefaultPreFilters()
              {
                  return [new ActionFilter\Authentication()];
              }

              public function showAction(
                  #[ActionFilter\Parameter\Required]
                  #[ActionFilter\Parameter\Cast("int")]
                  int $pageId
              ): AjaxJson {
                  $text = $this->pageService->gettext($pageId);

                  return AjaxJson::createSuccess([
                      'html' => $this->renderPartial('demo:main.page', [
                          'text' => $text
                      ])
                  ]);
              }
          }
          ```

      - tabName: Роутинг
        text: |
          Система маршрутизации с именованными маршрутами.

          ```php
          use Bitrix\Main\Routing\RoutingConfigurator;

          return function (RoutingConfigurator $routes) {
              $routes->group('/shop', function(RoutingConfigurator $routes) {
                  // Страница категории с переменной {categoryId}
                  $routes->get('/category/{categoryId}/', [
                      'controller' => 'Bitrix\\Shop\\Controllers\\CategoryController',
                      'action' => 'view'
                  ])->where('categoryId', '\d+'); // Ограничение: только цифры

                  // Страница товара с несколькими переменными
                  $routes->get('/product/{categoryId}/{productSlug}/', [
                      'controller' => 'Bitrix\\Shop\\Controllers\\ProductController',
                      'action' => 'detail'
                  ]);
              });
          };
          ```

          Генерация URL по имени маршрута:
          ```php
          use Bitrix\Main\Routing\RoutingConfigurator;

          return function (RoutingConfigurator $routes) {
              // Именованный роут для страницы контактов
              $routes->get('/contacts/', [
                  'controller' => 'Bitrix\\Main\\Controllers\\PageController',
                  'action' => 'contacts'
              ])->name('company.contacts');

              // Именованный роут с параметрами
              $routes->get('/news/{newsSlug}/', [
                  'controller' => 'Bitrix\\News\\Controllers\\NewsController',
                  'action' => 'detail'
              ])->name('news.detail');
          };

          // Пример генерации URL в коде:
          $url = \Bitrix\Main\Routing\Router::getInstance()->generate('news.detail', [
              'newsSlug' => 'latest-updates'
          ]);
          // Вернет: /news/latest-updates/
          ```

      - tabName: ActionFilters
        text: |
          Гибкая работа с запросами на уровне контроллеров. Фильтры для обработки входящих и исходящих данных:

          ```php
          use \Bitrix\Main\Engine\Controller;
          use \Bitrix\Main\Engine\ActionFilter;

          class ExampleController extends Controller
          {
              public function configureActions()
              {
                  return [
                      'exampleAction' => [ // Название экшена
                          'prefilters' => [ // Фильтры, которые выполнятся до вызова экшена
                    // Разрешаем только POST-запросы
                              new ActionFilter\HttpMethod([ActionFilter\HttpMethod::METHOD_POST]),
                    // Требуем авторизацию + редирект на страницу входа
                              new ActionFilter\Authentication(true),
                          ],
                          'postfilters' => [ // Фильтры, выполняемые после экшена
                    // Проверка CSRF-токена, параметры по умолчанию
                              new ActionFilter\Csrf(),
                          ],
                      ],
                  ];
              }

              public function exampleAction()
              {
                  // Логика действия
                  return ['result' => 'success'];
              }
          ```
      - tabName: ORM
        text: |
          ORM с поддержкой связей и событий:

          ```php
          // Создание объекта
          $user = UserTable::createObject();
          $user->setName('Иван');
          $user->setEmail('ivan@example.ru');
          $user->save(); // Автоматическая валидация

          // Работа со связями
          $order = OrderTable::getById(1)->fetchObject();
          $user = $order->getUser(); // Автоматическая загрузка связи
          $items = $order->getItems(); // Связь один-ко-многим
          ```

          Генерация классов по структуре БД:

          ```bash
          php vendor/bin/bitrix entity:generate --module=main --table=b_user
          ```

      - tabName: Рассылки и SMS
        text: |
          Унифицированный API для коммуникаций

          ```php
          // Email с шаблоном
          \Bitrix\Main\Mail\Event::send([
              'EVENT_NAME' => 'WELCOME_EMAIL',
              'LID' => SITE_ID,
              'FIELDS' => [
                  'NAME' => $userName,
                  'CONFIRM_LINK' => $confirmUrl
              ],
          ]);
          ```

      - tabName: Файлы и S3
        text: |
          Храните файлы в облаке:

          ```php
          здесь нужен пример кода?
          если нужен, то в документации не нашла
          ИИ выдает чушь
          ```

      - tabName: Очереди
        text: |
          Обрабатывайте задачи в фоне. Чтобы использовать очереди:
          - создайте класс сообщения,
          - создайте класс обработчика сообщения,
          - добавьте информацию об очереди в конфигурацию `.settings.php`.
          Дополнительно можно настроить сложную логику сообщений, переключить обработку на консольный скрипт и использовать свою таблицу для хранения сообщений.

      - tabName: Агенты
        text: |
          Агенты и фоновые задачи помогают выполнять PHP-код автоматически.
          - Агенты — запускают код по расписанию.
          - Фоновые задачи — после отправки ответа пользователю.

          Для сложных сценариев можно комбинировать оба подхода.

          ```php
          // Фоновая задача запускает агента для поэтапной обработки
          $app->addBackgroundJob(function() {
              CAgent::AddAgent(
                  "MyLongProcess::start();",
                  "mymodule",
                  "N",
                  0
              );
          });
          ```

      - tabName: События
        text: |
          Реагируйте на системные изменения:

          ```php
          AddEventHandler("main", "OnAfterUserAdd", function($userId) {
              // Отправка welcome-email
          });
          ```

  - type: 'content-layout-block'
    textContent:
      title: 'Инструменты безопасности'

  - type: 'questions-block'
    text: |
      Контролируйте доступ к данным и функциям системы. Предотвращайте утечки и нарушения законов.
    items:
      - title: Работа с пользователями
        text: |
          - Регистрируйте сотрудников с подтверждением email или через корпоративный портал.
          - Настраивайте двухфакторную аутентификацию для доступа к критичным разделам.
          - Просматривайте историю входов и подозрительную активность.

          ```php
          // Включить 2FA для пользователя
          $user = new CUser;
          $user->Update($USER->GetID(), ["SECURE_AUTH" => "Y"]);
          ```
        listStyle: 'disk'

      - title: Группы пользователей и политики безопасности
        text: |
          - Создавайте отдельные группы для отделов (бухгалтерия, маркетинг, IT).
          - Ограничивайте доступ к финансовым данным и персональной информации.
          - Настраивайте политики паролей для разных групп.

          ```php
          // Создание группы с ограниченными правами
          $group = new CGroup;
          $group->Add([
              "NAME" => "Финансовый отдел",
              "SECURITY_POLICY" => ["PASSWORD_LENGTH" => 12]
          ]);
          ```
        listStyle: 'disk'

      - title: Ролевая модель
        text: |
          - Назначайте права по принципу минимальных привилегий (ABAC).
          - Контролируйте доступ к модулям через атрибуты: отдел, должность, локация.
          - Аудит всех изменений прав доступа.

          ```php
          // Проверка доступа через AccessController
          if (\Bitrix\Main\Engine\CurrentUser::get()->canDoOperation('edit_financial_data')) {
              // Доступ разрешен
          }
          ```
        listStyle: 'disk'

  - type: 'content-layout-block'
    background:
      dark:
        style:
          backgroundColor: '#E8E4FF'
      light:
        style:
          backgroundColor: '#E8E4FF'
    textContent:
      title: Быстрый старт с Docker образом
      text: |
        1. Склонируйте официальный репозиторий
            ```bash
            cd my-project
            git clone https://github.com/bitrix-tools/env-docker.git
            ```

        2. Настройте обязательные параметры. Укажите:
            - пароли баз данных MySQL и Postgres в `.env_sql`
            - секретный ключ для Push-сервера в `.env_push`

        3. Запустите контейнеры
            ```bash
            docker compose up -d
            ```

        4. Скачайте скрипт `bitrixsetup.php` в папку `www`
            ```bash
            docker compose exec --user=bitrix php sh
            cd /opt/www/
            wget https://www.1c-bitrix.ru/download/scripts/bitrixsetup.php
            ```

        5. Откройте в браузере [http://localhost:8588/bitrixsetup.php](http://localhost:8588/bitrixsetup.php)

        6. Следуйте инструкциям мастера

      links:
        - text: 'Контейнерное окружение для Битрикс (README)'
          url: 'https://github.com/bitrix-tools/env-docker'
          theme: 'normal'
          arrow: true
          color: '#54BA7E'

        - text: 'Инструкция по установке продуктов Битрикс'
          url: 'pages/get-started/install-solution.html'
          theme: 'normal'
          arrow: true
          color: '#54BA7E'


