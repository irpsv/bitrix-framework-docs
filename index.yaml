blocks:
  - type: 'header-block'
    width: 's'
    offset: 'default'
    title: 'Bitrix Framework'
    resetPaddings: false
    verticalOffset: 'l'
    description: 'Фреймворк для работы с «1С-Битрикс: Управление сайтом» и Битрикс24'
    background:
      light:
        image:
          mobile: '_images/cover.png'
          desktop: '_images/cover.png'
          disableCompress: true
        color: '#E8E4FF'
        fullWidth: false
      dark:
        image:
          mobile: '_images/cover.png'
          desktop: '_images/cover.png'
          disableCompress: true
        color: '#E8E4FF'
        fullWidth: false
    buttons:
      - text: 'Начать'
        theme: 'outlined'
        size: 'promo'
        url: 'pages/get-started/install-env.html'
      - text: 'GitHub'
        theme: 'outlined'
        size: 'promo'
        url: 'https://github.com/bitrix-tools/framework-docs'

  - type: 'card-layout-block'
    title: Продукты
    description: | 
      Bitrix Framework — основа для бизнес-решений на PHP. На ней работают «1C-Битрикс: Управление сайтом» и Битрикс24 — не нужно писать систему с нуля. Виртуальная машина BitrixVM ускоряет запуск продуктов.
    children:
      - text: 'CMS для интернет-магазинов и корпоративных сайтов. Подходит для крупных проектов: многопоточная обработка заказов, API для интеграций и встроенное кеширование.'
        title: Управление сайтом
        type: 'image-card'
        image: {
           dark : "_images/img_restapi_banner_s_01.png",
           light : "_images/img_restapi_banner_s_01.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Платформа для автоматизации бизнеса и командной работы. Включает CRM, задачи, документы и видеозвонки в одном месте.'
        title: 'Битрикс24'
        type: 'image-card'
        media:
        image: {
           dark : "_images/img_restapi_banner_s_02.png",
           light : "_images/img_restapi_banner_s_02.png"
        }
        links:
          - text: 'Установить продукт'
            url: 'pages/get-started/install-solution.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E
      - text: 'Готовая виртуальная машина для быстрого развертывания проектов. Упрощает настройку сервера и снижает риски ошибок при установке.'
        title: 'BitrixVM'
        type: 'image-card'
        image: {
           dark : "_images/img_restapi_banner_s_03.png",
           light : "_images/img_restapi_banner_s_03.png"
        }
        links:
          - text: 'Установить окружение'
            url: 'pages/get-started/install-env.html'
            theme: 'normal'
            arrow: true
            color: #54BA7E

  - type: 'tabs-block'
    title: Преимущества
    description: Используйте проверенные инструменты для разработки, безопасности и масштабирования.
    colSizes:
      sm: 1
      md: 2
      lg: 3
    items:
      - tabName: CMS из коробки
        text: Bitrix Framework включает готовую CMS. Редактируйте контент, настраивайте SEO и управляйте пользователями без разработки. Система подходит для магазинов и корпоративных сайтов.
        links:
          - text: 'О продукте на официальном сайте 1С-Битрикс'
            url: 'https://www.1c-bitrix.ru/products/cms/'
            theme: 'normal'
            arrow: true
            color: #54BA7E

      - tabName: Маркетплейс решений
        text: Более 5000 готовых решений для типовых задач. Внедряйте функционал в 1 клик — от платежных систем до интеграции с соцсетями. Все решения проверены на безопасность.
        links:
          - text: 'Маркетплейс'
            url: 'https://marketplace.1c-bitrix.ru/'
            theme: 'normal'
            arrow: true
            color: #54BA7E
          - text: 'Маркет Битрикс24'
            url: 'https://www.bitrix24.ru/apps/'
            theme: 'normal'
            arrow: true
            color: #54BA7E

      - tabName: Стандарты PSR
        text: Работайте по PSR-1, PSR-4 и PSR-7. Подключайте библиотеки через Composer. Знакомые стандарты ускоряют разработку.

      - tabName: Безопасность
        text: Защита от XSS, SQL-инъекций и CSRF-атак. Регулярные обновления закрывают уязвимости.

      - tabName: Модульность
        text: Расширяйте функционал без правки ядра. Добавляйте решения из Маркетплейса или создавайте свои. Ядро системы остается неизменным.

      - tabName: Интеграции
        text: REST API и вебхуки для подключения сервисов. Обменивайтесь данными с 1С, почтой и CRM.
        links:
          - text: 'Документация REST API'
            url: 'https://apidocs.bitrix24.ru/'
            theme: 'normal'
            arrow: true
            color: #54BA7E

      - tabName: Масштабируемость
        text: Проекты работают под высокой нагрузкой благодаря кешированию и кластеризации. Готовые инструменты для распределенных систем и облачных хранилищ.

  - type: 'tabs-block'
    title: Фреймворк в котором есть всё что нужно
    description: Кратенький текст на тему насколько у нас всё хорошо продумано и как удобно работать с фреймворком
    items:
      - tabName: Контроллеры
        text: |
          Контроллеры с автоматической валидацией и DI-инъекцией.
          
          ```php
          <?php

          namespace Bitrix\Demo\Controllers;

          use Bitrix\Main\Engine\Controller;
          use Bitrix\Main\Engine\ActionFilter;
          use Bitrix\Main\Engine\Response\AjaxJson;
          use Bitrix\Demo\Services\PageService;

          class MainController extends Controller
          {
              public function __construct(private PageService $pageService) 
              {
                  parent::__construct();
              }

              protected function getDefaultPreFilters()
              {
                  return [new ActionFilter\Authentication()];
              }

              public function showAction(
                  #[ActionFilter\Parameter\Required]
                  #[ActionFilter\Parameter\Cast("int")]
                  int $pageId
              ): AjaxJson {
                  $content = $this->pageService->getContent($pageId);
                  
                  return AjaxJson::createSuccess([
                      'html' => $this->renderPartial('demo:main.page', [
                          'content' => $content
                      ])
                  ]);
              }
          }
          ```

      - tabName: Роутинг
        text: |
          Гибкая система маршрутизации с именованными маршрутами.
          
          ```php
          use Bitrix\Main\Routing\RoutingConfigurator;

          return function (RoutingConfigurator $routes) {
              $routes->group('/shop', function(RoutingConfigurator $routes) {
                  // Страница категории с переменной {categoryId}
                  $routes->get('/category/{categoryId}/', [
                      'controller' => 'Bitrix\\Shop\\Controllers\\CategoryController',
                      'action' => 'view'
                  ])->where('categoryId', '\d+'); // Ограничение: только цифры
                  
                  // Страница товара с несколькими переменными
                  $routes->get('/product/{categoryId}/{productSlug}/', [
                      'controller' => 'Bitrix\\Shop\\Controllers\\ProductController',
                      'action' => 'detail'
                  ]);
              });
          };
          ```

          Генерация URL по имени маршрута:
          ```php
          use Bitrix\Main\Routing\RoutingConfigurator;

          return function (RoutingConfigurator $routes) {
              // Именованный роут для страницы контактов
              $routes->get('/contacts/', [
                  'controller' => 'Bitrix\\Main\\Controllers\\PageController',
                  'action' => 'contacts'
              ])->name('company.contacts');
              
              // Именованный роут с параметрами
              $routes->get('/news/{newsSlug}/', [
                  'controller' => 'Bitrix\\News\\Controllers\\NewsController',
                  'action' => 'detail'
              ])->name('news.detail');
          };

          // Пример генерации URL в коде:
          $url = \Bitrix\Main\Routing\Router::getInstance()->generate('news.detail', [
              'newsSlug' => 'latest-updates'
          ]);
          // Вернет: /news/latest-updates/
          ```

      - tabName: ActionFilters
        text: |
          Удобная и гибкая работа с запросами на уровне контроллеров. Фильтры для обработки входящих и исходящих данных:
          
          ```php
          use Bitrix\Main\Engine\Controller;
          use Bitrix\Main\Engine\ActionFilter;

          class ApiController extends Controller
          {
              public function configureActions()
              {
                  return [
                      'saveData' => [
                          // Префильтры
                          'prefilters' => [
                              new ActionFilter\Authentication(), // Проверка авторизации
                              new ActionFilter\HttpMethod(['POST']) // Разрешаем только POST
                          ],
                          
                          // Постфильтры
                          'postfilters' => [
                              new ActionFilter\Cors() // Добавляем CORS-заголовки
                          ]
                      ]
                  ];
              }
              
              public function saveDataAction()
              {
                  $this->setJsonResponse(); // Форсируем JSON-ответ
                  return ['status' => 'success'];
              }
          }
          ```
      - tabName: ORM
        text: |
          Полноценная ORM с поддержкой связей и событий:

          ```php
          // Создание объекта
          $user = UserTable::createObject();
          $user->setName('Иван');
          $user->setEmail('ivan@example.com');
          $user->save(); // Автоматическая валидация

          // Работа со связями
          $order = OrderTable::getById(1)->fetchObject();
          $user = $order->getUser(); // Автоматическая загрузка связи
          $items = $order->getItems(); // Связь один-ко-многим
          ```

          Генерация классов по структуре БД: 
          
          ```php
          php vendor/bin/bitrix entity:generate --module=main --table=b_user
          ```

      - tabName: Рассылки и SMS
        text: | 
          Унифицированный API для коммуникаций

          ```php
          // Email с шаблоном
          \Bitrix\Main\Mail\Event::send([
              'EVENT_NAME' => 'WELCOME_EMAIL',
              'LID' => SITE_ID,
              'FIELDS' => [
                  'NAME' => $userName,
                  'CONFIRM_LINK' => $confirmUrl
              ],
          ]);

          // SMS через шлюз
          \Bitrix\Main\Sms\Sender::send([
              'to' => '+79001234567',
              'text' => 'Ваш код: 1234',
              'provider' => 'sms.ru'
          ]);
          ```

      - tabName: Файлы и S3
        text: Какой-то текст

      - tabName: Очереди
        text: Какой-то текст

      - tabName: Агенты
        text: |
          Агенты и фоновые задачи помогают выполнять PHP-код автоматически.
          - Агенты — запускают код по расписанию.
          - Фоновые задачи — после отправки ответа пользователю.
          
          Для сложных сценариев можно комбинировать оба подхода.
          
          ```php
          // Фоновая задача запускает агента для поэтапной обработки
          $app->addBackgroundJob(function() {
              CAgent::AddAgent(
                  "MyLongProcess::start();",
                  "mymodule",
                  "N",
                  0
              );
          });
          ```

      - tabName: События
        text: |
          События уведомляют части приложения об изменениях, что позволяет системе реагировать на них.
          
          ```php
          $event = new Bitrix\Main\Event("main", "OnPageStart");
          $event->send();
          ``` 

  - type: 'tabs-block'
    title: Встроенные инструменты безопасности
    description: |
      Контролируйте доступ к данным и функциям системы. Предотвращайте утечки и нарушения законов.
    items:
      - tabName: Работа с пользователями
        text: | 
          Регистрируйте сотрудников с подтверждением email или через корпоративный портал. Настраивайте двухфакторную аутентификацию для доступа к критичным разделам.
          Просматривайте историю входов и подозрительную активность. 

          ```php
          // Включить 2FA для пользователя
          $user = new CUser;
          $user->Update($USER->GetID(), ["SECURE_AUTH" => "Y"]);
          ```

      - tabName: Группы пользователей и политики безопасности
        text: |
          Создавайте отдельные группы для отделов (бухгалтерия, маркетинг, IT). Ограничивайте доступ к финансовым данным и персональной информации.

          ```php
          // Создание группы с ограниченными правами
          $group = new CGroup;
          $group->Add([
              "NAME" => "Финансовый отдел",
              "SECURITY_POLICY" => ["PASSWORD_LENGTH" => 12]
          ]);
          ```
          Настраивайте политики паролей для разных групп.

      - tabName: Ролевая модель (ABAC)
        text: |
          Назначайте права по принципу «минимальных привилегий». Контролируйте доступ к модулям через атрибуты (отдел, должность, локация). Аудит всех изменений прав доступа.

          ```php
          // Проверка доступа через AccessController
          if (\Bitrix\Main\Engine\CurrentUser::get()->canDoOperation('edit_financial_data')) {
              // Доступ разрешен
          }
          ```
  - type: 'content-layout-block'
    textContent:
      title: Быстрый старт
      text: |
        1. Клонируйте официальный репозиторий:
            ```bash
            git clone https://github.com/bitrix-tools/env-docker.git my-project
            cd my-project
            ```
        2. Настройте обязательные параметры. Укажите в .env:
            - Пароль для БД
            - Ключ для Push-сервера
        3. Запустите контейнеры.
            ```bash
            docker compose up -d
            ```
        4. Чтобы установить продукт, скачайте bitrixsetup.php в папку www.
            ```bash
            тут несколько команд
            ```
        5. Откройте http://localhost:8588
        6. Следуйте инструкциям мастера установки

        Подробнее про установку:
        - [Документация на GitHub](https://github.com/bitrix-tools/env-docker)
        - [Инструкция по установке продуктов Битрикс](pages/get-started/install-solution.html)
        

        
